import 'package:sakinah_app/features/progress/domain/entities/user_progress.dart';

class UserProgressModel extends UserProgress {
  final String? supabaseId;
  final String? userId;
  final DateTime? updatedAt;

  const UserProgressModel({
    super.id,
    this.supabaseId,
    this.userId,
    required super.date,
    required super.azkarCompleted,
    required super.streakCount,
    required super.completedAzkarIds,
    super.reflection,
    super.moodBefore,
    super.moodAfter,
    super.createdAt,
    this.updatedAt,
  });

  factory UserProgressModel.fromJson(Map<String, dynamic> json) {
    return UserProgressModel(
      id: null,
      supabaseId: json['id'] as String?,
      userId: json['user_id'] as String?,
      date: DateTime.parse(json['date'] as String),
      azkarCompleted: json['azkar_completed'] as int? ?? 0,
      streakCount: json['streak_count'] as int? ?? 0,
      completedAzkarIds: json['completed_azkar_ids'] != null
          ? List<int>.from(json['completed_azkar_ids'] as List)
          : <int>[],
      reflection: json['reflection'] as String?,
      moodBefore: json['mood_before'] as String?,
      moodAfter: json['mood_after'] as String?,
      createdAt: json['created_at'] != null
          ? DateTime.parse(json['created_at'] as String)
          : null,
      updatedAt: json['updated_at'] != null
          ? DateTime.parse(json['updated_at'] as String)
          : null,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': supabaseId,
      'user_id': userId,
      'date': date.toIso8601String().split('T')[0], // Date only
      'azkar_completed': azkarCompleted,
      'streak_count': streakCount,
      'completed_azkar_ids': completedAzkarIds,
      'reflection': reflection,
      'mood_before': moodBefore,
      'mood_after': moodAfter,
      'created_at': createdAt?.toIso8601String(),
      'updated_at': updatedAt?.toIso8601String(),
    };
  }

  Map<String, dynamic> toSupabaseInsert() {
    final json = toJson();
    // Remove fields that are auto-generated by Supabase
    json.remove('id');
    json.remove('created_at');
    json.remove('updated_at');
    return json;
  }

  @override
  UserProgress copyWith({
    int? id,
    DateTime? date,
    int? azkarCompleted,
    int? streakCount,
    List<int>? completedAzkarIds,
    String? reflection,
    String? moodBefore,
    String? moodAfter,
    DateTime? createdAt,
  }) {
    return UserProgressModel(
      id: id ?? this.id,
      supabaseId: supabaseId,
      userId: userId,
      date: date ?? this.date,
      azkarCompleted: azkarCompleted ?? this.azkarCompleted,
      streakCount: streakCount ?? this.streakCount,
      completedAzkarIds: completedAzkarIds ?? this.completedAzkarIds,
      reflection: reflection ?? this.reflection,
      moodBefore: moodBefore ?? this.moodBefore,
      moodAfter: moodAfter ?? this.moodAfter,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt,
    );
  }

  UserProgressModel copyWithSupabase({
    String? supabaseId,
    String? userId,
    DateTime? date,
    int? azkarCompleted,
    int? streakCount,
    List<int>? completedAzkarIds,
    String? reflection,
    String? moodBefore,
    String? moodAfter,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return UserProgressModel(
      id: id,
      supabaseId: supabaseId ?? this.supabaseId,
      userId: userId ?? this.userId,
      date: date ?? this.date,
      azkarCompleted: azkarCompleted ?? this.azkarCompleted,
      streakCount: streakCount ?? this.streakCount,
      completedAzkarIds: completedAzkarIds ?? this.completedAzkarIds,
      reflection: reflection ?? this.reflection,
      moodBefore: moodBefore ?? this.moodBefore,
      moodAfter: moodAfter ?? this.moodAfter,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
    );
  }
}
